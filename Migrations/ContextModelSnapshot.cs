// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestEfCodeFirst;

#nullable disable

namespace TestEfCodeFirst.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GrupTakim", b =>
                {
                    b.Property<int>("GruplarId")
                        .HasColumnType("integer");

                    b.Property<int>("TakimlarId")
                        .HasColumnType("integer");

                    b.HasKey("GruplarId", "TakimlarId");

                    b.HasIndex("TakimlarId");

                    b.ToTable("GrupTakim");
                });

            modelBuilder.Entity("TestEfCodeFirst.Model.Grup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Adi")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Grup");
                });

            modelBuilder.Entity("TestEfCodeFirst.Model.GrupKisiVeri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Derece")
                        .HasColumnType("integer");

                    b.Property<int>("GrupId")
                        .HasColumnType("integer");

                    b.Property<int>("KisiId")
                        .HasColumnType("integer");

                    b.Property<int>("Puan")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GrupId")
                        .IsUnique();

                    b.HasIndex("KisiId");

                    b.ToTable("GrupKisiVeri");
                });

            modelBuilder.Entity("TestEfCodeFirst.Model.Kisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Adi")
                        .HasColumnType("integer");

                    b.Property<int>("Soyadi")
                        .HasColumnType("integer");

                    b.Property<int>("TakimId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TakimId");

                    b.ToTable("Kisi");
                });

            modelBuilder.Entity("TestEfCodeFirst.Model.Takim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("YoneticiId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Takim");
                });

            modelBuilder.Entity("GrupTakim", b =>
                {
                    b.HasOne("TestEfCodeFirst.Model.Grup", null)
                        .WithMany()
                        .HasForeignKey("GruplarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestEfCodeFirst.Model.Takim", null)
                        .WithMany()
                        .HasForeignKey("TakimlarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TestEfCodeFirst.Model.GrupKisiVeri", b =>
                {
                    b.HasOne("TestEfCodeFirst.Model.Grup", "Grup")
                        .WithOne("GrupKisiVeri")
                        .HasForeignKey("TestEfCodeFirst.Model.GrupKisiVeri", "GrupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestEfCodeFirst.Model.Kisi", "Kisi")
                        .WithMany()
                        .HasForeignKey("KisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grup");

                    b.Navigation("Kisi");
                });

            modelBuilder.Entity("TestEfCodeFirst.Model.Kisi", b =>
                {
                    b.HasOne("TestEfCodeFirst.Model.Takim", "Takim")
                        .WithMany("Kisiler")
                        .HasForeignKey("TakimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Takim");
                });

            modelBuilder.Entity("TestEfCodeFirst.Model.Grup", b =>
                {
                    b.Navigation("GrupKisiVeri")
                        .IsRequired();
                });

            modelBuilder.Entity("TestEfCodeFirst.Model.Takim", b =>
                {
                    b.Navigation("Kisiler");
                });
#pragma warning restore 612, 618
        }
    }
}
